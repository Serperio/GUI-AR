using System.Collections;
using UnityEngine;

public class KNN {
    static int [,] dataset = {{8,0,0,19,7,0,0,0,0,5,0,0,0,0,0,18,17,19,4,0,0,19,0,0,0,0,0,0,0,0,0,0,19,19,10,0,11,0,11,0,17,0,6,0,0,0,0,8,0,0,0,0,0,0,5,19,7,0,0,0,19,17,0,0,14,0,0,0,19,0,0,0,7},{10,8,0,18,0,17,13,0,0,0,0,0,8,0,0,19,19,16,0,0,0,16,0,0,7,0,0,9,0,0,0,17,18,18,9,0,0,0,0,0,19,0,0,0,0,0,0,10,0,0,17,0,17,5,0,18,0,0,0,0,16,19,0,0,19,8,0,13,16,0,0,0,0},{0,0,0,11,0,0,0,0,8,0,0,0,0,0,10,14,15,0,0,0,8,10,5,0,0,0,0,0,0,0,0,0,10,11,0,0,0,0,0,0,15,0,0,0,7,0,0,0,8,0,0,0,0,0,0,11,0,8,0,0,10,14,7,0,4,0,19,0,0,0,0,8,0},{0,10,8,0,0,0,0,7,14,0,8,0,0,8,19,0,0,0,0,0,15,0,0,0,0,8,0,0,0,8,10,0,0,0,0,12,0,0,0,0,0,8,0,8,0,0,10,0,14,0,0,10,0,0,0,0,0,14,10,13,0,8,0,8,19,9,11,0,0,0,7,0,0},{4,19,0,0,0,0,0,12,12,0,12,10,19,12,0,16,16,0,0,0,12,0,11,8,0,0,12,0,0,0,0,10,0,0,8,13,0,9,13,0,16,12,0,0,0,19,8,8,12,5,0,19,10,0,10,0,0,12,0,7,0,16,10,0,19,19,0,8,0,0,12,0,0},{4,0,0,0,0,0,0,0,0,0,8,11,10,8,0,0,0,7,0,18,0,7,13,12,0,0,0,0,10,16,0,0,0,0,4,16,17,10,16,5,0,8,0,0,0,0,15,10,0,10,0,0,0,0,13,0,0,0,0,0,7,0,0,0,19,0,0,0,7,6,8,0,0}};
    static int [] targets = {2,2,2,1,1,1};

    public static int predict(int []predecir){
        int posicion = -1;
        float minimaDistancia = float.MaxValue;
        for(int i = 0; i < dataset.GetLength(0); i++){
            float distancia = 0;
            for(int j = 0; j < dataset.GetLength(1); j++){
                distancia += Mathf.Pow(dataset[i,j]-predecir[j],2);
            }
            distancia = Mathf.Sqrt(distancia);
            if(distancia < minimaDistancia){
                posicion = i;
                minimaDistancia = distancia;
            }
        }
        return targets[posicion];
    }
}